--- mock-1.4.9/py/mockbuild/plugins/root_cache.py.omv~	2018-03-06 16:37:02.625846559 +0100
+++ mock-1.4.9/py/mockbuild/plugins/root_cache.py	2018-03-06 16:37:26.971170521 +0100
@@ -124,7 +124,7 @@ class RootCache(object):
                     os.chdir(mockbuild.util.find_non_nfs_dir())
                 mockbuild.util.mkdirIfAbsent(self.buildroot.make_chroot_path())
                 mockbuild.util.do(
-                    ["tar"] + self.compressArgs + ["-xf", self.rootCacheFile, "-C", self.buildroot.make_chroot_path()],
+                    ["gtar"] + self.compressArgs + ["-xf", self.rootCacheFile, "-C", self.buildroot.make_chroot_path()],
                     shell=False, printOutput=True
                 )
                 for item in self.exclude_dirs:
@@ -184,7 +184,7 @@ class RootCache(object):
                 self.state.start("creating root cache")
                 try:
                     mockbuild.util.do(
-                        ["tar", "--one-file-system", "--exclude-caches", "--exclude-caches-under"] +
+                        ["gtar", "--one-file-system", "--exclude-caches", "--exclude-caches-under"] +
                         self.compressArgs +
                         ["-cf", self.rootCacheFile,
                          "-C", self.buildroot.make_chroot_path()] +
--- mock-1.4.9/py/mockbuild/scm.py.omv~	2018-03-06 16:38:05.316680183 +0100
+++ mock-1.4.9/py/mockbuild/scm.py	2018-03-06 16:38:45.464213056 +0100
@@ -181,7 +181,7 @@ class scmWorker(object):
 
             # Always exclude vcs data from tarball unless told not to
             if str(self.exclude_vcs).lower() == "true":
-                proc = subprocess.Popen(['tar', '--help'], shell=False, stdout=subprocess.PIPE)
+                proc = subprocess.Popen(['gtar', '--help'], shell=False, stdout=subprocess.PIPE)
                 proc_result = proc.communicate()[0]
                 if six.PY3:
                     proc_result = proc_result.decode()
@@ -192,7 +192,7 @@ class scmWorker(object):
             cwd_dir = os.getcwd()
             os.chdir(self.wrk_dir)
             os.rename(self.name, tardir)
-            cmd = "tar caf " + tarball + " " + taropts + " " + tardir
+            cmd = "gtar caf " + tarball + " " + taropts + " " + tardir
             util.do(shlex.split(cmd), shell=False, cwd=self.wrk_dir, env=os.environ)
             os.rename(tarball, tardir + "/" + tarball)
             os.rename(tardir, self.name)
